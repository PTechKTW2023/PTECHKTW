// <auto-generated />
using System;
using Booker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booker.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookGrades", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GradeId");

                    b.HasIndex("GradeId");

                    b.ToTable("BookGrades");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 2,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 3,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 4,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 5,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 6,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 7,
                            GradeId = 5
                        },
                        new
                        {
                            BookId = 8,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 9,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 10,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 11,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 12,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 13,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 14,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 15,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 16,
                            GradeId = 5
                        },
                        new
                        {
                            BookId = 17,
                            GradeId = 5
                        },
                        new
                        {
                            BookId = 18,
                            GradeId = 5
                        },
                        new
                        {
                            BookId = 19,
                            GradeId = 5
                        },
                        new
                        {
                            BookId = 20,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 21,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 22,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 23,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 24,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 25,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 26,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 27,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 28,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 29,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 30,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 31,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 32,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 33,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 34,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 35,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 36,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 37,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 38,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 39,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 40,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 41,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 42,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 43,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 44,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 45,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 46,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 47,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 48,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 49,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 50,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 51,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 52,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 53,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 54,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 55,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 56,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 57,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 58,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 59,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 60,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 61,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 62,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 63,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 64,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 65,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 66,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 67,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 68,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 69,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 70,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 71,
                            GradeId = 2
                        },
                        new
                        {
                            BookId = 72,
                            GradeId = 1
                        },
                        new
                        {
                            BookId = 73,
                            GradeId = 4
                        },
                        new
                        {
                            BookId = 74,
                            GradeId = 5
                        },
                        new
                        {
                            BookId = 75,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 76,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 77,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 78,
                            GradeId = 3
                        },
                        new
                        {
                            BookId = 79,
                            GradeId = 3
                        });
                });

            modelBuilder.Entity("Booker.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Level")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = false,
                            SubjectId = 1,
                            Title = "Ponad słowami 1 cz. 1"
                        },
                        new
                        {
                            Id = 2,
                            Level = false,
                            SubjectId = 1,
                            Title = "Ponad słowami 1 cz. 2"
                        },
                        new
                        {
                            Id = 3,
                            Level = false,
                            SubjectId = 1,
                            Title = "Ponad słowami 2 cz. 1"
                        },
                        new
                        {
                            Id = 4,
                            Level = false,
                            SubjectId = 1,
                            Title = "Ponad słowami 2 cz. 2"
                        },
                        new
                        {
                            Id = 5,
                            Level = false,
                            SubjectId = 1,
                            Title = "Ponad słowami 3 cz. 1"
                        },
                        new
                        {
                            Id = 6,
                            Level = false,
                            SubjectId = 1,
                            Title = "Ponad słowami 3 cz. 2"
                        },
                        new
                        {
                            Id = 7,
                            Level = false,
                            SubjectId = 1,
                            Title = "Ponad słowami 4"
                        },
                        new
                        {
                            Id = 8,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 2 Podręcznik"
                        },
                        new
                        {
                            Id = 9,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 3 Podręcznik"
                        },
                        new
                        {
                            Id = 10,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 4 Podręcznik"
                        },
                        new
                        {
                            Id = 11,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 5 Podręcznik"
                        },
                        new
                        {
                            Id = 12,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 2 Ćwiczenia"
                        },
                        new
                        {
                            Id = 13,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 3 Ćwiczenia"
                        },
                        new
                        {
                            Id = 14,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 4 Ćwiczenia"
                        },
                        new
                        {
                            Id = 15,
                            Level = false,
                            SubjectId = 2,
                            Title = "Focus 5 Ćwiczenia"
                        },
                        new
                        {
                            Id = 16,
                            Level = false,
                            SubjectId = 2,
                            Title = "My matura perspectives [nowa era]"
                        },
                        new
                        {
                            Id = 17,
                            Level = false,
                            SubjectId = 2,
                            Title = "Repetytorium [Macmillan]"
                        },
                        new
                        {
                            Id = 18,
                            Level = true,
                            SubjectId = 2,
                            Title = "Repetytorium maturzysty [Oxford]"
                        },
                        new
                        {
                            Id = 19,
                            Level = false,
                            SubjectId = 2,
                            Title = "Repetytorium maturzysty [Cambridge, PWN]"
                        },
                        new
                        {
                            Id = 20,
                            Level = false,
                            SubjectId = 3,
                            Title = "Welttour Deutsch 1"
                        },
                        new
                        {
                            Id = 21,
                            Level = false,
                            SubjectId = 3,
                            Title = "Welttour Deutsch 2"
                        },
                        new
                        {
                            Id = 22,
                            Level = false,
                            SubjectId = 3,
                            Title = "Welttour Deutsch 3"
                        },
                        new
                        {
                            Id = 23,
                            Level = false,
                            SubjectId = 3,
                            Title = "Welttour Deutsch 4"
                        },
                        new
                        {
                            Id = 24,
                            Level = false,
                            SubjectId = 3,
                            Title = "Effekt 1"
                        },
                        new
                        {
                            Id = 25,
                            Level = false,
                            SubjectId = 3,
                            Title = "Effekt 2"
                        },
                        new
                        {
                            Id = 26,
                            Level = false,
                            SubjectId = 3,
                            Title = "Effekt 3"
                        },
                        new
                        {
                            Id = 27,
                            Level = false,
                            SubjectId = 3,
                            Title = "Effekt 4"
                        },
                        new
                        {
                            Id = 28,
                            Level = false,
                            SubjectId = 4,
                            Title = "Biologia na czasie 1"
                        },
                        new
                        {
                            Id = 29,
                            Level = false,
                            SubjectId = 4,
                            Title = "Biologia na czasie 2"
                        },
                        new
                        {
                            Id = 30,
                            Level = false,
                            SubjectId = 4,
                            Title = "Biologia na czasie 3"
                        },
                        new
                        {
                            Id = 31,
                            Level = true,
                            SubjectId = 4,
                            Title = "Biologia na czasie 1"
                        },
                        new
                        {
                            Id = 32,
                            Level = true,
                            SubjectId = 4,
                            Title = "Biologia na czasie 2"
                        },
                        new
                        {
                            Id = 33,
                            Level = true,
                            SubjectId = 4,
                            Title = "Biologia na czasie 3"
                        },
                        new
                        {
                            Id = 34,
                            Level = false,
                            SubjectId = 5,
                            Title = "To jest chemia 1"
                        },
                        new
                        {
                            Id = 35,
                            Level = false,
                            SubjectId = 5,
                            Title = "To jest chemia 2"
                        },
                        new
                        {
                            Id = 36,
                            Level = true,
                            SubjectId = 5,
                            Title = "To jest chemia 1"
                        },
                        new
                        {
                            Id = 37,
                            Level = true,
                            SubjectId = 5,
                            Title = "To jest chemia 2"
                        },
                        new
                        {
                            Id = 38,
                            Level = false,
                            SubjectId = 6,
                            Title = "Edukacja dla bezpieczeństwa [wsip]"
                        },
                        new
                        {
                            Id = 39,
                            Level = true,
                            SubjectId = 7,
                            Title = "Fizyka 1 [wsip]"
                        },
                        new
                        {
                            Id = 40,
                            Level = true,
                            SubjectId = 7,
                            Title = "Fizyka 2 [wsip]"
                        },
                        new
                        {
                            Id = 41,
                            Level = true,
                            SubjectId = 7,
                            Title = "Fizyka 3 [wsip]"
                        },
                        new
                        {
                            Id = 42,
                            Level = true,
                            SubjectId = 7,
                            Title = "Fizyka 4 [wsip]"
                        },
                        new
                        {
                            Id = 43,
                            Level = false,
                            SubjectId = 7,
                            Title = "Fizyka 1 [wsip]"
                        },
                        new
                        {
                            Id = 44,
                            Level = false,
                            SubjectId = 7,
                            Title = "Fizyka 2 [wsip]"
                        },
                        new
                        {
                            Id = 45,
                            Level = false,
                            SubjectId = 7,
                            Title = "Fizyka 3 [wsip]"
                        },
                        new
                        {
                            Id = 46,
                            Level = false,
                            SubjectId = 7,
                            Title = "Fizyka 4 [wsip]"
                        },
                        new
                        {
                            Id = 47,
                            Level = false,
                            SubjectId = 8,
                            Title = "Oblicza geografii 1"
                        },
                        new
                        {
                            Id = 48,
                            Level = false,
                            SubjectId = 8,
                            Title = "Oblicza geografii 2"
                        },
                        new
                        {
                            Id = 49,
                            Level = false,
                            SubjectId = 8,
                            Title = "Oblicz geografii karty pracy 1"
                        },
                        new
                        {
                            Id = 50,
                            Level = false,
                            SubjectId = 8,
                            Title = "Oblicz geografii karty pracy 2"
                        },
                        new
                        {
                            Id = 51,
                            Level = false,
                            SubjectId = 9,
                            Title = "Historia [wsip] 1"
                        },
                        new
                        {
                            Id = 52,
                            Level = false,
                            SubjectId = 9,
                            Title = "Historia [wsip] 2"
                        },
                        new
                        {
                            Id = 53,
                            Level = false,
                            SubjectId = 9,
                            Title = "Historia [wsip] 3"
                        },
                        new
                        {
                            Id = 54,
                            Level = false,
                            SubjectId = 9,
                            Title = "Historia [wsip] 4"
                        },
                        new
                        {
                            Id = 55,
                            Level = false,
                            SubjectId = 10,
                            Title = "Historia i teraźniejszość [wsip] 1"
                        },
                        new
                        {
                            Id = 56,
                            Level = false,
                            SubjectId = 10,
                            Title = "Historia i teraźniejszość [wsip] 2"
                        },
                        new
                        {
                            Id = 57,
                            Level = false,
                            SubjectId = 11,
                            Title = "Informatyka [operon]"
                        },
                        new
                        {
                            Id = 58,
                            Level = false,
                            SubjectId = 11,
                            Title = "Informatyka dla szkół ponadgimnazjalnych [Migra]"
                        },
                        new
                        {
                            Id = 59,
                            Level = true,
                            SubjectId = 11,
                            Title = "Informatyka [operon]"
                        },
                        new
                        {
                            Id = 60,
                            Level = true,
                            SubjectId = 11,
                            Title = "Informatyka dla szkół ponadgimnazjalnych [Migra]"
                        },
                        new
                        {
                            Id = 61,
                            Level = false,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 1"
                        },
                        new
                        {
                            Id = 62,
                            Level = false,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 2"
                        },
                        new
                        {
                            Id = 63,
                            Level = false,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 3"
                        },
                        new
                        {
                            Id = 64,
                            Level = false,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 4"
                        },
                        new
                        {
                            Id = 65,
                            Level = true,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 1"
                        },
                        new
                        {
                            Id = 66,
                            Level = true,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 2"
                        },
                        new
                        {
                            Id = 67,
                            Level = true,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 3"
                        },
                        new
                        {
                            Id = 68,
                            Level = true,
                            SubjectId = 12,
                            Title = "NOWA MATeMAtyka 4"
                        },
                        new
                        {
                            Id = 69,
                            Level = false,
                            SubjectId = 13,
                            Title = "Krok w przedsiębiorczość"
                        },
                        new
                        {
                            Id = 70,
                            Level = false,
                            SubjectId = 14,
                            Title = "Krok w biznes i zarządzanie 1"
                        },
                        new
                        {
                            Id = 71,
                            Level = false,
                            SubjectId = 14,
                            Title = "Krok w biznes i zarządzanie 2"
                        },
                        new
                        {
                            Id = 72,
                            Level = false,
                            SubjectId = 15,
                            Title = "Spotkania ze sztuką 1"
                        },
                        new
                        {
                            Id = 73,
                            Level = false,
                            SubjectId = 16,
                            Title = "W centrum uwagi 1"
                        },
                        new
                        {
                            Id = 74,
                            Level = false,
                            SubjectId = 16,
                            Title = "W centrum uwagi 2"
                        },
                        new
                        {
                            Id = 75,
                            Level = true,
                            SubjectId = 17,
                            Title = "Electronics"
                        },
                        new
                        {
                            Id = 76,
                            Level = true,
                            SubjectId = 17,
                            Title = "Electrician"
                        },
                        new
                        {
                            Id = 77,
                            Level = true,
                            SubjectId = 17,
                            Title = "Software engineering"
                        },
                        new
                        {
                            Id = 78,
                            Level = false,
                            SubjectId = 17,
                            Title = "IT [english for IT]"
                        },
                        new
                        {
                            Id = 79,
                            Level = true,
                            SubjectId = 11,
                            Title = "Informatyka w praktyce"
                        });
                });

            modelBuilder.Entity("Booker.Data.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GradeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GradeNumber = "1"
                        },
                        new
                        {
                            Id = 2,
                            GradeNumber = "2"
                        },
                        new
                        {
                            Id = 3,
                            GradeNumber = "3"
                        },
                        new
                        {
                            Id = 4,
                            GradeNumber = "4"
                        },
                        new
                        {
                            Id = 5,
                            GradeNumber = "5"
                        });
                });

            modelBuilder.Entity("Booker.Data.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 15,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(44),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 40.142857142857142857142857143m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 72,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(102),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 72m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 2,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(106),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 56.714285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 73,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(109),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 79.28571428571428571428571429m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 14,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(114),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 46.571428571428571428571428571m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BookId = 3,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(117),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 34.142857142857142857142857143m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            BookId = 60,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(120),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 52.428571428571428571428571429m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            BookId = 62,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(125),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 65.571428571428571428571428571m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 61,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(128),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 31.571428571428571428571428571m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            BookId = 51,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(131),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 85.57142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            BookId = 9,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(134),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 80.14285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            BookId = 8,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(159),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 44.714285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 47,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(163),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 39.571428571428571428571428571m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 39,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(166),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 84m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            BookId = 64,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(169),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 54.714285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            BookId = 11,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(173),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 66.285714285714285714285714286m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 17,
                            BookId = 75,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(175),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 55m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            BookId = 71,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(179),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 41m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 15,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(182),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 26.142857142857142857142857143m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 20,
                            BookId = 67,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(186),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 83.28571428571428571428571429m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 21,
                            BookId = 18,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(189),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 66.571428571428571428571428571m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 22,
                            BookId = 24,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(192),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 68.285714285714285714285714286m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            BookId = 51,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(195),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 61.285714285714285714285714286m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            BookId = 67,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(199),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 65m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 25,
                            BookId = 8,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(202),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 60.285714285714285714285714286m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 26,
                            BookId = 68,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(205),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 72.857142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 27,
                            BookId = 51,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(208),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 53.857142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 28,
                            BookId = 8,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(211),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 68.857142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 2,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(214),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 54.571428571428571428571428571m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 30,
                            BookId = 58,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(217),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 43m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 31,
                            BookId = 19,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(220),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 77.285714285714285714285714286m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 11,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(225),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 64.428571428571428571428571429m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 33,
                            BookId = 18,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(228),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 47.714285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 34,
                            BookId = 18,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(231),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 27m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 35,
                            BookId = 56,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(234),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 46.714285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 36,
                            BookId = 66,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(238),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 48.285714285714285714285714286m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 37,
                            BookId = 14,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(241),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 22.857142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 38,
                            BookId = 43,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(244),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 79.57142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 39,
                            BookId = 37,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(247),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 56.857142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 40,
                            BookId = 58,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(250),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 80.14285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 41,
                            BookId = 18,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(254),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 61.142857142857142857142857143m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 42,
                            BookId = 67,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(257),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 79.42857142857142857142857143m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 43,
                            BookId = 12,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(261),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 48.285714285714285714285714286m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 44,
                            BookId = 32,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(264),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 45.428571428571428571428571429m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 45,
                            BookId = 66,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(267),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 75.857142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 5
                        },
                        new
                        {
                            Id = 46,
                            BookId = 36,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(271),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 27.142857142857142857142857143m,
                            State = "bardzo dobry",
                            UserId = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 2,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(275),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 25.428571428571428571428571429m,
                            State = "bardzo dobry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 48,
                            BookId = 34,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(278),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 35.857142857142857142857142857m,
                            State = "bardzo dobry",
                            UserId = 3
                        },
                        new
                        {
                            Id = 49,
                            BookId = 43,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(281),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 32.142857142857142857142857143m,
                            State = "bardzo dobry",
                            UserId = 4
                        },
                        new
                        {
                            Id = 50,
                            BookId = 4,
                            DateTime = new DateTime(2025, 2, 24, 14, 52, 33, 490, DateTimeKind.Local).AddTicks(284),
                            Description = "Książka w dobrym stanie, prawie nie używana, nie zalana, rogi delikatnie zagięte, polecam kebab Zahir i pytam czy idziecie na sylwestra do zduniaka.",
                            Photo = "https://images.unsplash.com/photo-1517770413964-df8ca61194a6?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Price = 52.714285714285714285714285714m,
                            State = "bardzo dobry",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Booker.Data.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Język polski"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Język angielski"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Język niemiecki"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Biologia"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chemia"
                        },
                        new
                        {
                            Id = 6,
                            Name = "EDB"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Fizyka"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Geografia"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Historia"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Historia i teraźniejszość"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Informatyka"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Matematyka"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Podstawy przedsiębiorczości"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Biznes i zarządzanie"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Plastyka"
                        },
                        new
                        {
                            Id = 16,
                            Name = "WOS"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Język angielski zawodowy"
                        });
                });

            modelBuilder.Entity("Booker.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b60c32af-3b1d-4afb-a38c-492a843446c5",
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            Photo = "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                            School = "Śl.TZN",
                            TwoFactorEnabled = false,
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dd4497ab-bbfd-419f-b141-00028859ecfe",
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            Photo = "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                            School = "Śl.TZN",
                            TwoFactorEnabled = false,
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4af4eabd-7d9c-4968-bc48-c5f5a97003be",
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            Photo = "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                            School = "Śl.TZN",
                            TwoFactorEnabled = false,
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "47fde348-0bb9-4535-9046-9dceba8c72d1",
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            Photo = "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                            School = "Śl.TZN",
                            TwoFactorEnabled = false,
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7973b629-c99d-4ab7-b10d-9c7c7f351c52",
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            Photo = "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                            School = "Śl.TZN",
                            TwoFactorEnabled = false,
                            UserName = "user5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BookGrades", b =>
                {
                    b.HasOne("Booker.Data.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booker.Data.Grade", null)
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Booker.Data.Book", b =>
                {
                    b.HasOne("Booker.Data.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Booker.Data.Item", b =>
                {
                    b.HasOne("Booker.Data.Book", "Book")
                        .WithMany("Items")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booker.Data.User", "User")
                        .WithMany("Items")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Booker.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Booker.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booker.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Booker.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Booker.Data.Book", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Booker.Data.User", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
