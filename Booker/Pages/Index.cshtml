@page
@model IndexModel
@{
    ViewData["Title"] = "Booker";
}

<section class="filter">
    <form hx-get="/" hx-trigger="input changed delay:500ms, change" hx-target=".grid-gallery" hx-push-url="true"
          hx-include="[name='search'], [name='grade'], [name='subject'], [name='minPrice'], [name='maxPrice'], [name='level']"
          hx-vals='{"pageNumber": 0}'>
        <input type="search" name="search" placeholder="Wyszukaj..." />

        <details id="filterDetails">
            <summary id="filterSummary">
                <svg>
                    <use href="img/icons.svg#si-awesome-sliders" />
                </svg>
                Filtry
            </summary>

            <div class="grid">
                <select name="grade">
                    <option value="">@GradeLevels.Wszystkie</option>
                    @{
                        var gradeLevels = typeof(GradeLevels)
                            .GetFields(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Static)
                            .Where(f => f.FieldType == typeof(string))
                            .Select(f => f.GetValue(null) as string)
                            .Where(s => s != GradeLevels.Wszystkie)
                            .OrderBy(s => s);

                        foreach (var gradeLevel in gradeLevels)
                        {
                                    <option value="@gradeLevel">@gradeLevel</option>
                        }
                    }
                </select>

                <select name="subject">
                    <option value="">@SubjectNames.Wszystkie</option>
                    @{
                        var subjectNames = typeof(SubjectNames)
                            .GetFields(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Static)
                            .Where(f => f.FieldType == typeof(string))
                            .Select(f => f.GetValue(null) as string)
                            .Where(s => s != SubjectNames.Wszystkie)
                            .OrderBy(s => s);

                        foreach (var subjectName in subjectNames)
                        {
                                    <option value="@subjectName">@subjectName</option>
                        }
                    }
                </select>

                <select name="level">
                    <option value="">@BookLevels.Wszystkie</option>
                    @{
                        var bookLevels = typeof(BookLevels)
                            .GetFields(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Static)
                            .Where(f => f.FieldType == typeof(string))
                            .Select(f => f.GetValue(null) as string)
                            .Where(s => s != BookLevels.Wszystkie)
                            .OrderBy(s => s);

                        foreach (var bookLevel in bookLevels)
                        {
                                    <option value="@bookLevel">@bookLevel</option>
                        }
                    }
                </select>

                <input type="number" name="minPrice" placeholder="Cena min." />
                <input type="number" name="maxPrice" placeholder="Cena max." />
            </div>
            <button type="button" id="mobileFilterSubmit">Zatwierdź filtry</button>
        </details>
    </form>
</section>

<section class="grid-gallery">
    @await Html.PartialAsync("_ItemGallery", Model.ItemsList)
</section>

<section>
    <div aria-busy="true" class="htmx-indicator" id="ind"></div>
</section>

<script>
    document.getElementById('mobileFilterSubmit').addEventListener('click', function() {
        document.getElementById('filterDetails').removeAttribute("open");
    });
</script>