// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using recyclingAPI.Data;

#nullable disable

namespace recyclingAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241011184637_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("recyclingAPI.Data.CalendarEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("WasteTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WasteTypeId");

                    b.ToTable("CalendarEntries");
                });

            modelBuilder.Entity("recyclingAPI.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("recyclingAPI.Data.MonthlyWasteReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int>("WasteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WasteId");

                    b.ToTable("MonthlyWasteReports");
                });

            modelBuilder.Entity("recyclingAPI.Data.WasteCollectionReportRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MonthlyWasteReportId")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int>("WasteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthlyWasteReportId");

                    b.HasIndex("WasteId");

                    b.ToTable("WasteCollectionReportRows");
                });

            modelBuilder.Entity("recyclingAPI.Data.WasteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsADR")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("WasteTypes");
                });

            modelBuilder.Entity("recyclingAPI.Data.CalendarEntry", b =>
                {
                    b.HasOne("recyclingAPI.Data.WasteType", "WasteType")
                        .WithMany()
                        .HasForeignKey("WasteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WasteType");
                });

            modelBuilder.Entity("recyclingAPI.Data.MonthlyWasteReport", b =>
                {
                    b.HasOne("recyclingAPI.Data.WasteType", "Waste")
                        .WithMany()
                        .HasForeignKey("WasteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Waste");
                });

            modelBuilder.Entity("recyclingAPI.Data.WasteCollectionReportRow", b =>
                {
                    b.HasOne("recyclingAPI.Data.MonthlyWasteReport", null)
                        .WithMany("Positions")
                        .HasForeignKey("MonthlyWasteReportId");

                    b.HasOne("recyclingAPI.Data.WasteType", "Waste")
                        .WithMany()
                        .HasForeignKey("WasteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Waste");
                });

            modelBuilder.Entity("recyclingAPI.Data.WasteType", b =>
                {
                    b.HasOne("recyclingAPI.Data.Company", null)
                        .WithMany("WasteType")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("recyclingAPI.Data.Company", b =>
                {
                    b.Navigation("WasteType");
                });

            modelBuilder.Entity("recyclingAPI.Data.MonthlyWasteReport", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
